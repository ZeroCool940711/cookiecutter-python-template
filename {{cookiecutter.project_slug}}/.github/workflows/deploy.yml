name: Deploy my package

on:
  pull_request:
    branches:
      - "main"
      - "master"

env:
  PACKAGE_NAME: {{ cookiecutter.module_name }}
  ARTIFACTS_PATH: artifacts
  {%- if cookiecutter.package_manager == 'poetry' %}
  POETRY_VERSION: 1.0.5
  POETRY_CACHE_DIR: $CI_PROJECT_DIR/.cache/poetry
  {%- endif %}

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Build wheel
      {% if cookiecutter.package_manager == 'poetry' -%}
        run: |
          pip install poetry==$POETRY_VERSION
          poetry build -f wheel
          mv dist/ $ARTIFACTS_PATH
      {% else -%}
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          python setup.py sdist bdist_wheel
          mv dist/ $ARTIFACTS_PATH
      {%- endif %}

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@master
        with:
          name:  $PACKAGE_NAME-package
          path: "$ARTIFACTS_PATH/dist/$PACKAGE_NAME-*.whl"

  test-unit:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Download wheel package
        uses: actions/download-artifact@v3
        with:
          name: $PACKAGE_NAME-package
          path: dist/
      {% if cookiecutter.package_manager == 'conda' -%}
      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: venv
          environment-file: environment-dev.yml
          python-version: 3.10
          auto-activate-base: false
      {% else -%}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      {%- endif %}
      - name: Run unit tests
      {% if cookiecutter.package_manager == 'poetry' -%}
        run: |
          pip install poetry==$POETRY_VERSION
          poetry install --no-root
          source `poetry env info --path`/bin/activate
          pytest tests

      {% elif cookiecutter.package_manager == 'conda' -%}
        run: |
          source activate venv
          pip install dist/{{ cookiecutter.module_name }}-*.whl
          pytest tests
      {% elif cookiecutter.package_manager == 'pip' -%}
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt -r requirements-dev.txt
        pip install install dist/{{ cookiecutter.module_name }}-*.whl
        pytest tests
      {%- endif %}
